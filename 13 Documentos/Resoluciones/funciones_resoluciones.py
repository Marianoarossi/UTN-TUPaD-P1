# -*- coding: utf-8 -*-
"""Funciones - Resoluciones

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eY1S-PAYMFFkNDKHmyODzxPnsUIvxORE

# 🧠💡 Kata: Funciones

## 📚 Ejercicio 1: Tabla de Multiplicar

Escribir una función llamada `tabla_multiplicar` que reciba un número entero positivo y devuelva una lista con su tabla de multiplicar del 1 al 10. Por ejemplo, para el número 3, la lista debe ser `[3, 6, 9, 12, 15, 18, 21, 24, 27, 30]`.
"""

def tabla_multiplicar(n):
    lista = []
    for i in range(1, 11):
        lista.append(n * i)
    return lista

print("Tabla de multiplicar del 3:", tabla_multiplicar(3))

"""## 📚 Ejercicio 2: Suma de Números Pares

Desarrollar una función llamada `suma_pares` que reciba una lista de números enteros y devuelva la suma de todos los números pares en la lista. Usar la lista `[1, 2, 3, 4, 5, 6]` como ejemplo.
"""

def suma_pares(numeros):
    suma = 0
    for num in numeros:
        if num % 2 == 0:
            suma += num
    return suma

print("Suma de los pares de [1, 2, 3, 4, 5, 6]:", suma_pares([1, 2, 3, 4, 5, 6]))

"""## 📚 Ejercicio 3: Área y Perímetro de un Rectángulo

Escribir una función llamada `rectangulo` que reciba la longitud y la anchura de un rectángulo y devuelva tanto su área como su perímetro. La función debe retornar ambos valores en una tupla.
"""

def rectangulo(longitud, anchura):
    area = longitud * anchura
    perimetro = 2 * (longitud + anchura)
    return area, perimetro

area, perimetro = rectangulo(5, 3)
print("Rectángulo (5, 3): Área =", area, ", Perímetro =", perimetro)

"""## 📚 Ejercicio 4: Conversión de Temperatura

Desarrollar una función llamada `convertir_temperatura` que reciba una temperatura en grados Celsius y una unidad de destino (`"F"` para Fahrenheit o `"K"` para Kelvin), y devuelva la temperatura convertida a la unidad especificada.

Las fórmulas son:
- Celsius a Fahrenheit: `F = C * 9/5 + 32`
- Celsius a Kelvin: `K = C + 273.15`
"""

def convertir_temperatura(celsius, unidad):
    if unidad == "F":
        return celsius * 9/5 + 32
    elif unidad == "K":
        return celsius + 273.15
    else:
        return "Unidad incorrecta"

print("25°C a Fahrenheit:", convertir_temperatura(25, "F"))
print("25°C a Kelvin:", convertir_temperatura(25, "K"))

"""## 📚 Ejercicio 5: Número Primo

Crear una función llamada `es_primo` que reciba un número entero positivo y devuelva `True` si es primo y `False` en caso contrario. Un número primo es aquel que solo es divisible por 1 y por sí mismo.
"""

def es_primo(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print("El 7 es primo?:", es_primo(7))
print("El 8 es primo?:", es_primo(8))

"""## 📚 Ejercicio 6: Promedio de Calificaciones

Crear una función llamada `promedio_calificaciones` que reciba una lista de calificaciones (números flotantes entre 0 y 10) y devuelva el promedio. Si la lista está vacía, debe devolver 0. Usar como ejemplo la lista `[8.5, 9.0, 7.5, 8.0]`.
"""

def promedio_calificaciones(calificaciones):
    total = 0
    for calif in calificaciones:
        total += calif
    return total / len(calificaciones)

print("Promedio de [8.5, 9.0, 7.5, 8.0]:", promedio_calificaciones([8.5, 9.0, 7.5, 8.0]))

"""## 📚 Ejercicio 7: Factorial de un Número

Desarrollar un programa que calcule el factorial de un número entero positivo ingresado por el usuario.
El programa debe usar dos funciones:
- `validar_entrada`: que verifique si el número es entero no negativo.
- `factorial`: que reciba el número y devuelva su factorial (recordando que el factorial de 0 es 1).
"""

def factorial(n):
    if n == 0:
        return 1
    resultado = 1
    for i in range(1, n+1):
        resultado *= i
    return resultado

numero = int(input("Ingrese un número entero no negativo para calcular su factorial: "))
print("El factorial de", numero, "es", factorial(numero))

"""## 📚 Ejercicio 8: Verificador de Número Primo con Función de División

Crear un programa que determine si un número entero positivo es primo. El programa debe usar dos funciones:
- `es_divisible`: que reciba dos números enteros y devuelva `True` si el primero es divisible por el segundo.
- `es_primo`: que use `es_divisible` para verificar si el número es primo.
"""

def es_divisible(a, b):
    if b == 0:
        return False
    return a % b == 0

def es_primo(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

num = int(input("Ingrese un número entero positivo: "))
if num < 0:
    print("El número debe ser positivo")
else:
    if es_primo(num):
        print(num, "es primo")
    else:
        print(num, "no es primo")

"""## 📚 Ejercicio 9: Conversión de Temperaturas con Menú

Desarrollar un programa que convierta una temperatura en grados Celsius a Fahrenheit o Kelvin. El programa principal debe:
- Pedir la temperatura en Celsius.
- Usar la función `menu_conversion` para obtener la unidad de destino (`"F"` o `"K"`).
- Mostrar el resultado usando las funciones correspondientes `convertir_a_fahrenheit` y `convertir_a_kelvin`.
"""

def convertir_a_fahrenheit(c):
    return c * 9/5 + 32

def convertir_a_kelvin(c):
    return c + 273.15

def menu_conversion():
    opcion = input("¿Convertir a (F)ahrenheit o (K)elvin? ")
    if opcion in ["F", "K"]:
        return opcion
    else:
        return None

c = float(input("Ingrese la temperatura en grados Celsius: "))
op = menu_conversion()
if op == "F":
    print(c, "°C =", convertir_a_fahrenheit(c), "°F")
elif op == "K":
    print(c, "°C =", convertir_a_kelvin(c), "K")
else:
    print("Opción incorrecta")

"""## 📚 Ejercicio 10: Área y Perímetro de un Rectángulo con Validación de Dimensiones

Escribir un programa que calcule el área y el perímetro de un rectángulo a partir de la longitud y anchura ingresadas por el usuario. El programa debe:
- Pedir las dimensiones.
- Validarlas con la función `validar_dimensiones` (deben ser números positivos).
- Si son válidas, calcular y mostrar el área y el perímetro usando las funciones `calcular_area` y `calcular_perimetro`.
"""

def validar_dimensiones(longitud, anchura):
    return longitud > 0 and anchura > 0

def calcular_area(longitud, anchura):
    return longitud * anchura

def calcular_perimetro(longitud, anchura):
    return 2 * (longitud + anchura)

longitud = float(input("Ingrese la longitud: "))
anchura = float(input("Ingrese la anchura: "))
if validar_dimensiones(longitud, anchura):
    print("Área =", calcular_area(longitud, anchura))
    print("Perímetro =", calcular_perimetro(longitud, anchura))
else:
    print("Las dimensiones deben ser mayores a cero")